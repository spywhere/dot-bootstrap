#!/bin/sh

usage() {
  echo "USAGE"
  echo "  prcm [flags] <pr number>"
  echo
  echo "FLAGS"
  echo "  -h, --help              Show this message"
  echo "  -R, --repo=<OWNER/REPO> Select another repository using the OWNER/REPO format"
  echo
  echo "QUERY"
  echo "  If a repo flag is passed, it will take priority over auto-detect one."
}

_cat() {
  printf "%b" "$@" | sed 's/^"//g' | sed 's/"$//g' | bat -l md --paging never --color always --style changes
  return
}

_diff() {
  __filename="$1"
  shift
  printf "%b" "$@" | sed 's/^"//g' | sed 's/"$//g' | bat --file-name "$__filename" --paging never --color always --style changes,header
  return
}

main() {
  __repo=""
  __debug=0
  while test "$1" != ""; do
    __param=$(printf "%s" "$1" | sed 's/=.*//g')
    __value=$(printf "%s" "$1" | sed 's/^[^=]*=//g')
    __equal_sign=$(printf "%s" "$1" | sed 's/[^=]//g')
    case $__param in
      -h | --help)
        usage
        return
        ;;
      --internal)
        if test -z "$__equal_sign"; then
          return 1
        fi
        shift
        if test "$__value" = "diff"; then
          __arg="$1"
          shift
          "_$__value" "$__arg" "$@"
        else
          "_$__value" "$@"
        fi
        return
        ;;
      -R | --repo)
        if test -z "$__equal_sign"; then
          echo "ERROR: a repository is required (perhaps missing an equal sign?)"
          return 1
        fi
        __repo="$__value"
        ;;
      --debug)
        __debug=1
        ;;
      -*)
        echo "ERROR: unknown flag \"$1\""
        return 1
        ;;
      *)
        break
        ;;
    esac

    shift
  done

  __number="$*"
  if test -z "$__number"; then
    echo 'PR number is required'
    return 1
  fi

  __repo_owner=""
  __repo_name=""
  if test "$__repo" = ""; then
    # shellcheck disable=SC1091
    . _git_helper
    __repo_owner=$(get_repo_owner)
    __repo_name=$(get_repo_name)
  else
    __repo_owner=$(echo "$__repo" | cut -d'/' -f1)
    __repo_name=$(echo "$__repo" | cut -d'/' -f2)
  fi
  if test "$__repo_owner" = "" -o "$__repo_name" = ""; then
    echo "ERROR: Both repository owner name repository name is required (perhaps it is not in the \"owner/repo\" format?)"
    return 1
  fi

  if test $__debug -eq 1; then
    echo "#$__number in $__repo_owner/$__repo_name"
    return
  fi
  __graph_query=$(cat ~/.dots/binaries/_ticket_comment.graphql)
  if ! __response=$(gh api graphql -F limit="50" -F owner="$__repo_owner" -F name="$__repo_name" -F number="$__number" -f query="$__graph_query"); then
    return 1
  fi

  echo "$__response" | NUMBER="$__number" gomplate -f ~/.dots/binaries/_timeline_item.tmpl --plugin tkcm="$HOME/.dots/binaries/tkcm" -d 'number=env:///NUMBER' -d 'response=stdin:///in.json'
  return
}

main "$@"
